SELECT * FROM EMPLOYEES;
SELECT * FROM JOBS;
SELECT * FROM TAB;
--A. 문제0

SELECT EMPLOYEE_ID "사원번호"
     , FIRST_NAME || ' ' || LAST_NAME "NAME"
     , SALARY "급여"
     , JOB_ID "업무"
     , HIRE_DATE "입사일"
     , MANAGER_ID "상사의 사원번호"
  FROM EMPLOYEES;


--A. 문제1

SELECT 
     FIRST_NAME || ' ' || LAST_NAME "NAME"
     , JOBS.JOB_TITLE "업무" 
     , SALARY                 "급여"
     , SALARY * 12 + 100      "INCREASE ANN_SALARY"
     , (SALARY + 100) * 12    "INCREASE SALARY"
  FROM EMPLOYEES,JOBS
  WHERE  EMPLOYEES.JOB_ID = JOBS.JOB_ID;

--A. 문제2 
SELECT '성:' || LAST_NAME || '1YEAR SALARY = $' || SALARY * 12 "1YEAR SALARY"
FROM EMPLOYEES;
  
 -- A. 문제3
 
SELECT DEPARTMENTS.DEPARTMENT_NAME
       ,JOBS.JOB_TITLE
FROM DEPARTMENTS
,JOBS
,EMPLOYEES
WHERE DEPARTMENTS.DEPARTMENT_ID = EMPLOYEES.DEPARTMENT_ID
AND JOBS.JOB_ID=EMPLOYEES.JOB_ID
GROUP BY DEPARTMENTS.DEPARTMENT_NAME,JOBS.JOB_TITLE
ORDER BY 1, 2;

SELECT DISTINCT DEPARTMENT_ID
,JOB_ID
FROM EMPLOYEES
ORDER BY DEPARTMENT_ID;


-- a.2.
--문제0
-- 이외 주의
SELECT FIRST_NAME || ' ' || LAST_NAME "이름"
     , SALARY
  FROM EMPLOYEES
 WHERE SALARY NOT BETWEEN 7000 AND 10000
 ORDER BY 2;

-- 문제1
SELECT LAST_NAME
FROM   EMPLOYEES
WHERE  LAST_NAME LIKE '%e%' and LAST_NAME LIKE '%o%';
 
-- 문제2 
SELECT SYSDATE FROM DUAL;

SELECT FIRST_NAME || ' ' || LAST_NAME "이름"
     , JOBS.JOB_TITLE "업무"
     , HIRE_DATE "입사일"
  FROM EMPLOYEES
       ,JOBS
 WHERE EMPLOYEES.JOB_ID=JOBS.JOB_ID
 AND HIRE_DATE BETWEEN TO_DATE(20060520, 'YYYYMMDD') 
 AND TO_DATE(20070520235959, 'YYYYMMDDHH24MISS')
 ORDER BY 3;
 
 -- BETWEEN 보다는 보다크다 보다작다 추천
 
--문제3
SELECT FIRST_NAME || ' ' || LAST_NAME "NAME"
     , SALARY
     , JOBS.JOB_TITLE "업무"
     , COMMISSION_PCT "수당율"
  FROM EMPLOYEES 
       ,JOBS
  WHERE EMPLOYEES.JOB_ID=JOBS.JOB_ID 
  AND COMMISSION_PCT IS NOT NULL
  ORDER BY 2, 4;
  
  
-- A.3
--문제 0
SELECT EMPLOYEE_ID
     , FIRST_NAME || ' ' || LAST_NAME "NAME"
     , SALARY
     , ROUND(SALARY * 1.123, 0)
  FROM EMPLOYEES
 WHERE DEPARTMENT_ID = 60;

--문제1
-- E대문자로 바꾸기 주의
SELECT    FIRST_NAME || ' ' || LAST_NAME || ' IS A ' || UPPER(JOB_ID) "EMPLOYEE JOBS"
  FROM    EMPLOYEES
  WHERE  LAST_NAME LIKE '%s';

--문제2
SELECT * FROM EMPLOYEES;
SELECT * FROM DEPARTMENTS;
SELECT * FROM JOBS;
SELECT * FROM JOB_HISTORY;
 
SELECT  FIRST_NAME || ' ' || LAST_NAME "NAME"
    ,   SALARY
    ,   CASE WHEN COMMISSION_PCT IS NULL THEN 'SALARY ONLY'
        ELSE 'SALARY+COMMISSION'
        END AS SALARY_TYPE
FROM EMPLOYEES;

-- 강사답
SELECT 
FIRST_NAME || ' ' || LAST_NAME "NAME"
,SALARY
,(SALARY*12)+(SALARY*12* NVL(COMMISSION_PCT,0))
,NVL2(COMMISSION_PCT,'SALARY +COMMISION','SALARY ONLY')
FROM EMPLOYEES
ORDER BY SALARY DESC;

SELECT  FIRST_NAME || ' ' || LAST_NAME "NAME"
    ,   HIRE_DATE
    ,   TO_CHAR(HIRE_DATE,'DAY')
FROM EMPLOYEES
ORDER BY 
DECODE(TO_CHAR(HIRE_DATE,'D'),2,1,2,2,3,3,4,4,5,5,6,6,7,7);

--강사답

SELECT  FIRST_NAME || ' ' || LAST_NAME "NAME"
    ,   HIRE_DATE
    ,   TO_CHAR(HIRE_DATE,'DAY')
FROM EMPLOYEES
ORDER BY TO_CHAR(HIRE_DATE,'D');




select * from employees;

SELECT COUNT(DISTINCT MANAGER_ID) AS "상사 수"
FROM EMPLOYEES
WHERE MANAGER_ID IS NOT NULL;

SELECT DEPARTMENTS.DEPARTMENT_NAME AS "부서",
       TO_CHAR(SUM(EMPLOYEES.SALARY), '$999,999,999') AS "급여 합계",
       TO_CHAR(AVG(NVL(EMPLOYEES.SALARY,0)), '$999,999,999.99') AS "급여 평균",
       TO_CHAR(MAX(EMPLOYEES.SALARY), '$999,999,999') AS "급여 최대값",
       TO_CHAR(MIN(EMPLOYEES.SALARY), '$99,999,999') AS "급여 최소값"
FROM   EMPLOYEES
JOIN   DEPARTMENTS ON EMPLOYEES.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID
GROUP BY DEPARTMENTS.DEPARTMENT_NAME
ORDER BY DEPARTMENTS.DEPARTMENT_NAME;

SELECT JOBS.JOB_TITLE AS "업무",
       TO_CHAR(AVG(EMPLOYEES.SALARY), '$999,999,999.99') AS "급여 평균"
FROM   EMPLOYEES
JOIN   JOBS ON EMPLOYEES.JOB_ID = JOBS.JOB_ID
WHERE  JOBS.JOB_TITLE NOT LIKE '%CLERK%'
GROUP BY JOBS.JOB_TITLE
HAVING AVG(EMPLOYEES.SALARY) > 10000
ORDER BY AVG(EMPLOYEES.SALARY) DESC;

