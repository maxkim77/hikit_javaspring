/*실습 0822 1~14번*/
-- 1번 모든 도서의 이름과 가격을 검색하시오.
SELECT BOOKNAME
     , PRICE
  FROM BOOK;
-- 1-1번 모든 도서의 가격과 이름을 검색하시오.

SELECT PRICE
     , BOOKNAME
  FROM BOOK;
  
-- 2번 모든 도서테이블의 컬럼을 검색하시오

SELECT *
  FROM BOOK;

-- 3번 모든 출판사를 검색

SELECT PUBLISHER
  FROM BOOK;

-- 3-*

SELECT DISTINCT PUBLISHER
  FROM BOOK;
  
-- 4번 가격이 20000미만 도서 검색

SELECT *
  FROM BOOK
 WHERE PRICE < 20000;

--5번

SELECT *
  FROM BOOK
 WHERE PRICE >= 10000 AND PRICE <= 20000;

SELECT *
  FROM BOOK
 WHERE PRICE BETWEEN 10000 AND 19999;

-- 6번

SELECT *
  FROM BOOK
 WHERE PUBLISHER IN (
    '굿스포츠'
  , '대한미디어'
); 
-- 6-*

SELECT *
  FROM BOOK
 WHERE PUBLISHER NOT IN (
    '굿스포츠'
  , '대한미디어'
);

SELECT *
  FROM BOOK
 WHERE NOT ( PUBLISHER = '굿스포츠' OR PUBLISHER = '대한미디어' );

SELECT *
  FROM BOOK
 WHERE PUBLISHER <> '굿스포츠' AND PUBLISHER <> '대한미디어';

-- 7번

SELECT BOOKNAME
     , PUBLISHER
  FROM BOOK
 WHERE BOOKNAME = '축구의 역사';

-- 8번

SELECT BOOKNAME
     , PUBLISHER
  FROM BOOK
 WHERE BOOKNAME LIKE '축구%';

-- 9번

SELECT *
  FROM BOOK
 WHERE BOOKNAME LIKE '_구%';

--10번

SELECT *
  FROM BOOK
 WHERE PRICE >= 20000 AND BOOKNAME LIKE '%축구%';


--11번

SELECT *
  FROM BOOK
 WHERE PUBLISHER IN (
    '굿스포츠'
  , '대한미디어'
);

-- 12번

SELECT *
  FROM BOOK
 ORDER BY BOOKNAME;

-- 13번

SELECT *
  FROM BOOK
 ORDER BY PRICE
        , BOOKNAME;

-- 14번

SELECT *
  FROM BOOK
 ORDER BY PRICE DESC
        , PUBLISHER;
-- 15번 고객이 주문한 도서의 총판매액

SELECT SUM(SALEPRICE)
  FROM ORDERS;

SELECT SUM(SALEPRICE) "총매출"
  FROM ORDERS;

-- 16번 

SELECT SUM(SALEPRICE) "총매출"
  FROM ORDERS
 WHERE CUSTID = 2;   

-- 16--2 김연아가 UNIQUE

SELECT SUM(SALEPRICE) "총매출"
  FROM ORDERS
 WHERE CUSTID = (
    SELECT CUSTID
      FROM CUSTOMER
     WHERE NAME = '김연아'
);

-- 17번

SELECT SUM(SALEPRICE)     "TOTAL"
     , AVG(SALEPRICE)     "AVERAGE"
     , MIN(NVL(SALEPRICE,0))     "MINIMUM"
     , MAX(SALEPRICE)     "MAXIMUM"
  FROM ORDERS;
  
DESC ORDERS;

-- 18번

SELECT COUNT(*)
  FROM ORDERS;
-- 19번

SELECT CUSTID
     , COUNT(*)           "도서수량"
     , SUM(SALEPRICE)     "총액"
  FROM ORDERS
 GROUP BY CUSTID;

-- 20번까지만  
-- 가격 8000원이상
-- 고객별 주문의 도서 총수량

SELECT CUSTID
     , COUNT(*) AS "도서수량"
  FROM ORDERS
 WHERE SALEPRICE >= 8000
GROUP  BY CUSTID
HAVING COUNT(*) >= 2;


SELECT * FROM ORDERS;

SELECT CUSTID, COUNT(BOOKID)
FROM   ORDERS
WHERE SALEPRICE > 8000
GROUP BY CUSTID
HAVING COUNT(BOOKID)>=2;


--21
-- EQUI 조인
SELECT *
  FROM CUSTOMER C
  JOIN ORDERS O ON C.CUSTID = O.CUSTID;
-- 정통 SQL

SELECT *
FROM CUSTOMER
     ,ORDERS 
WHERE CUSTOMER.CUSTID=ORDERS.CUSTID;

  
-- 22번 
 SELECT *
  FROM CUSTOMER C
  JOIN ORDERS O ON C.CUSTID = O.CUSTID
 ORDER BY 1;

SELECT *
FROM CUSTOMER C
, ORDERS O
WHERE C.CUSTID=O.CUSTID
ORDER BY 1; 
 
SELECT * FROM CUSTOMER;
SELECT * FROM ORDERS;
SELECT * FROM BOOK;
--  문제 23
SELECT C.NAME
     , B.PRICE
  FROM CUSTOMER C
  JOIN ORDERS O ON C.CUSTID = O.CUSTID
  JOIN BOOK B ON O.BOOKID = B.BOOKID;
  
SELECT NAME
     , PRICE
  FROM CUSTOMER 
     , BOOK
     , ORDERS
  WHERE CUSTOMER.CUSTID = ORDERS.CUSTID
  AND ORDERS.BOOKID = BOOK.BOOKID;  
  
-- 문제 24
SELECT * FROM BOOK;
SELECT * FROM ORDERS;
SELECT * FROM CUSTOMER;

SELECT C.NAME, SUM(O.SALEPRICE)
FROM CUSTOMER C
JOIN ORDERS O ON C.CUSTID = O.CUSTID
GROUP BY C.NAME;

SELECT C.NAME, SUM(O.SALEPRICE)
FROM CUSTOMER C
,ORDERS O
WHERE C.CUSTID=O.CUSTID
GROUP BY C.NAME, C.CUSTID ORDER BY 1;

-- 25
SELECT * FROM BOOK;
SELECT * FROM ORDERS;
SELECT * FROM CUSTOMER;

SELECT C.NAME, B.BOOKNAME
FROM CUSTOMER C
JOIN ORDERS O ON C.CUSTID = O.CUSTID
JOIN BOOK B ON O.BOOKID = B.BOOKID;

SELECT C.NAME
       ,B.BOOKNAME
FROM  CUSTOMER C
     ,ORDERS O
     ,BOOK B
WHERE C.CUSTID=O.CUSTID
AND   B.BOOKID=O.BOOKID;

-- 26

-- ANSI SQL
SELECT C.NAME
     , B.BOOKNAME
  FROM CUSTOMER C
  JOIN ORDERS O ON C.CUSTID = O.CUSTID
  JOIN BOOK B   ON  O.BOOKID = B.BOOKID
  WHERE B.PRICE=20000;
  
-- ORACLE SQL  
SELECT C.NAME, B.BOOKNAME
FROM   CUSTOMER C
       ,ORDERS O
       ,BOOK B
WHERE C.CUSTID=O.CUSTID AND O.BOOKID=B.BOOKID AND B.PRICE =20000;

SELECT * FROM BOOK;

-- SUBQUERY SQL
SELECT C.NAME
, (
    SELECT B.BOOKNAME
      FROM BOOK B
     WHERE B.BOOKID IN (
        SELECT O.BOOKID
          FROM ORDERS O
         WHERE O.CUSTID = C.CUSTID
         AND B.PRICE = 20000
    ) 
) "BOOKNAME" 
FROM CUSTOMER C 
WHERE C.CUSTID = (
    SELECT O.CUSTID
      FROM ORDERS O
     WHERE O.BOOKID IN (
        SELECT B.BOOKID
          FROM BOOK B
         WHERE B.PRICE=20000
    )
);
